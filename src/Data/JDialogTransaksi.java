/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Data;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import util.DbConn;

/**
 *
 * @author COMPUTER
 */
public class JDialogTransaksi extends javax.swing.JDialog {

    private Connection conn;

    /**
     * Creates new form JDialogTransaksi
     */
    public JDialogTransaksi(java.awt.Frame parent, boolean modal, Connection conn) {
        super(parent, modal);
        this.conn = conn;
        initComponents();
        databaseConnection();
        loadAllDatabase();
        setLocationRelativeTo(null);
    }

    private String getNamebyIdNama(int idnama) throws SQLException {
        String Name = "";
        String sqlPenyewaLookup = "Select nama from datapenyewa where idnama = ? ;";

        PreparedStatement pstPenyewaLookup = conn.prepareStatement(sqlPenyewaLookup);
        pstPenyewaLookup.setInt(1, idnama);

        ResultSet rsPenyewaLookup = pstPenyewaLookup.executeQuery();
        while (rsPenyewaLookup.next()) {
            Name = rsPenyewaLookup.getString("nama");
        }
        return Name;
    }

    private String getBookbyIdBuku(int idbuku) throws SQLException {
        String judulbuku = "";
        String sqlBukuLookup = "Select judulbuku from databuku where idbuku = ? ;";

        PreparedStatement pstBukuLookup = conn.prepareStatement(sqlBukuLookup);
        pstBukuLookup.setInt(1, idbuku);

        ResultSet rsBukuLookup = pstBukuLookup.executeQuery();
        while (rsBukuLookup.next()) {
            judulbuku = rsBukuLookup.getString("judulbuku");
        }
        return judulbuku;
    }

    private void loadAllDatabase() {
        try {
            String sql = "SELECT username, idtransaksi, idnama, idbuku"
                    + ", date_format(tanggalpinjam, '%d-%m-%Y') as tanggalpinjam"
                    + ", date_format(tanggalpengembalian, '%d-%m-%Y') as tanggalpengembalian FROM transaksi;";
            PreparedStatement pstatement = conn.prepareStatement(sql);

            ResultSet rs = pstatement.executeQuery();

            if (rs.isBeforeFirst()) { // check is resultset not empty
                while (rs.next()) {
                    DefaultTableModel tableModel = (DefaultTableModel) tblTransaksi.getModel();
                    int row = tblTransaksi.getSelectedRow();
//                    if (row >= 0) {
                        Object data[] = {
                            rs.getInt("idtransaksi"),
                            rs.getInt("idnama"),
//                            getNamebyIdnama((int)(tblTransaksi.getValueAt(row, 1))),
                            rs.getInt("idbuku"),
//                            getBookbyIdBuku((int) tblTransaksi.getValueAt(row, 3)),
                            rs.getString("tanggalpinjam"),
                            rs.getString("tanggalpengembalian")
                        };
                        tableModel.addRow(data);
//                    }
                }
            } else {
                util.Sutil.msg(this, "Record Empty");
            }

            rs.close();
            pstatement.close();
        } catch (SQLException ex) {
            Logger.getLogger(JDialogTransaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void databaseConnection() {
        try {
            conn = DriverManager.getConnection(DbConn.JDBC_URL,
                    DbConn.JDBC_USERNAME,
                    DbConn.JDBC_PASSWORD);

            if (conn != null) {
                System.out.println("Connected to DB!\n");
            }
        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransaksi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblTransaksi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Transaksi", "ID Penyewa", "Nama", "ID Buku", "Judul Buku", "Tanggal Pinjam", "Tanggal Pengembalian"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTransaksi.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblTransaksi);
        tblTransaksi.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransaksi;
    // End of variables declaration//GEN-END:variables
}
